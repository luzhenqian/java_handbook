{"./":{"url":"./","title":"Java 手札","keywords":"","body":"Java 手札 这是一本关于 Java 的屠龙秘技，由澜岚编著。包罗万象，博大精深。 目前处于初期阶段，大致分为六篇。 撰写进度如下： 语言篇：编写中 工具篇：等待编写中 框架篇：编写中 存储篇：等待编写中 中间件篇：等待编写中 虚拟机篇：等待编写中 "},"java_language/":{"url":"java_language/","title":"语言篇","keywords":"","body":"Java 语言 这一章主要讲解 Java 语言。 "},"java_language/basics/":{"url":"java_language/basics/","title":"java 语言基础","keywords":"","body":"Java 语言基础 这一章主要讲解 Java 语言基础。 public class HelloWorld { public static void main(String[] args){ System.out.print(\"hello, world!\"); } } "},"java_language/basics/history.html":{"url":"java_language/basics/history.html","title":"历史","keywords":"","body":"Java 历史 要了解一件事物，必先了解其历史。 "},"java_language/basics/introduction.html":{"url":"java_language/basics/introduction.html","title":"简介","keywords":"","body":"Java 简介 Java 分类 按照平台来分，Java 分三种平台。 Java SE（Java Standard Edition） 用于桌面或简单服务器应用的 Java 平台。 Java EE（Java Enterprise Edition） 用于企业级（复杂）应用的 Java 平台。 Java ME（Java Micro Edition） 用于手机或嵌入式的 Java 平台。 JavaSE 是 Java 的标准版，平时大家最常使用的就是 JavaSE，本手札着重讲解的是 Java SE。 支撑 Java 运行的软件 JDK（Java Development Kit）：Java 开发工具包，编写 Java 程序的开发包，一般是开发人员使用。 JRE（Java Runtime Environment）：Java 运行时环境，运行 Java 程序的软件。 JVM（Java Virtual Machine）：Java 虚拟机，将.java 文件转换为.class 文件，可以运行.class 文件。 Java 程序跨平台的核心。 三者的关系是，JDK 包含 JRE，JRE 包含 JVM。 如果您是一个开发者，建议您直接安装 JDK。 Java 版本号 Java 最早的版本命名法是 1.x 的命名法。每次升级都是 1.1、1.2、1.3 这种增加小数点后面的数值。 在 1998 年 Sun 公司认为这样不能反映 JDK 的重大改进，将 Java 重命名为 Java2。 Java 的第 5 个版本，叫做 J2SE SDK 5.0。 在此之前的版本，命名规则是 Java1.0、1.1、1.2、1.3、1.4。 2006 年，版本号再次简化，变为 Java SE 6，Java SE 7 这种命名法。但是内部版本号是 1.6.0、1.7.0、1.8.0 "},"java_language/basics/environment.html":{"url":"java_language/basics/environment.html","title":"运行环境","keywords":"","body":"Java 程序运行环境 下载 JDK 编写 Java 程序，需要安装 JDK。 您可以在 Oracle 官网下载 JDK。注意选择和自己系统所匹配的安装包。 目前 JDK 的版本是 13.x，我会以此版本作为整本手札实例代码的主版本。 安装 JDK 下载完毕后进行安装。安装步骤很简单，全部点击下一步。 推荐您将 Java 安装到 C 盘，这里的默认安装路径不要修改。 安装完毕后，需要在您的电脑上配置 Java 相关的环境变量。 配置 Java 环境变量的方式有两种。 简单配置环境变量 以 windows10 系统为例，将安装路径的/bin 目录添加到此电脑右键->属性->高级系统设置->高级选项卡->环境变量->系统变量->Path 的第一项。放在第一项的原因是，如果一台电脑的环境变量中存在多个 JDK，会使用排列顺序在最前面的那一个。 比如：C:\\Program Files\\Java\\jdk-13.0.2\\bin 传统方式配置环境变量 按照惯例，需要配置 3 个环境变量。 第一个需要配置的环境变量是 JAVA_HOME，它的值是 JDK 的安装路径，比如：C:\\Program Files\\Java\\jdk-13.0.2。 第二个需要配置的环境变量是 Path，和简单方式的道理一样，只需要配置成 JAVA_HOME/bin。 第三个环境变量是classpath，配置内容是.;%Java_Home%\\bin;%Java_Home%\\lib\\dt.jar;%Java_Home%\\lib\\tools.jar。 在 JDK1.5 版本后，不再需要配置classpath。原因是 jre 可以自动搜索目录下的类文件，并且可以加载 dt.jar 和 tool.jar。 这里推荐第二种方式配置。理由是在一些情况下这种配置更加方便。比如在同一台电脑上有多个 JDK、或者 Tomcat 等第三方软件的配置等。 检测 JDK 是否正常 无论您使用哪种方式配置环境变量，配置完成后，都可以在命令行中运行java -version和javac -version来测试配置是否正常。 如果测试失败，就需要检查 JDK 安装和环境变量。 "},"java_language/basics/idea.html":{"url":"java_language/basics/idea.html","title":"集成开发环境","keywords":"","body":"Java 集成开发环境 集成开发环境介绍 集成开发环境（IDE Integrated Development Environment），是指一个功能强大，涵盖开发全流程的开发工具，本质上是一个或一套软件。 Java 的 IDE 主要有两个，一个是 Intellij IDEA，一个是 Eclipse。两个工具本质上没有太大的差别，下面简单列举几个作者的观点： Intellij IDEA 在用户体验上更胜一筹。 Intellij IDEA 是一个收费的软件，Eclipse 完全免费。 Eclipse 在性能上更好一些。 其他内容不过多对比，这方面的更多内容可以阅读本手札的【工具篇】。 从学习 Java 语言的角度来看，作者更推荐使用 VS Code 作为 Java 的 IDEA，理由是 VS Code 在保证功能的同时更加轻量化。 安装 VSCode 您可以在 VSCode 官网 下载与您操作系统对应的安装包。由于安装过程非常简单，在这里就不做赘述。 安装 VSCode 的 Java 开发扩展包 VSCode 拥有非常多的扩展软件，对开发 Java 而言，最基本的有两个。 Language Support for Java by Red Hat 该插件基于 Eclipse™JDT Language Server 对 Java 提供支持。让 VSCode 实现类似于 eclipse 的各种功能。 Java Test Runner 该插件可以运行和调试 Java 程序。 在 VSCode 左侧功能列表图标中选择扩展应用商店的图标，在搜索框输入 Java 或者 Java language 关键字进行搜索。上面提到的两个扩展包都在排名较前的位置，您也可以使用完整的扩展包名进行搜索。 其它很多扩展包同样非常有用，但目前暂时用不到。 "},"java_language/basics/hello_world.html":{"url":"java_language/basics/hello_world.html","title":"HelloWorld 程序","keywords":"","body":"HelloWorld 程序 编写 HelloWorld.java 文件 在 VSCode 中打开一个工作区，在工作区根目录下创建 HelloWorld.java 文件。 内容如下： public class HelloWorld { public static void main(String[] args) { System.out.println(\"hello, world!\"); } } 这是一个最基本的 Java 程序，作用是在控制台窗口输出hello, world!字样。 运行 HelloWorld 程序 现在运行这个文件的方式有两种。 使用命令行运行。 首先将 HelloWorld.java 文件编译成 HelloWorld.class 文件。 执行命令javac HelloWorld.java，会在根目录下生成一个 HelloWorld.class 的文件。 我们编写的代码 HelloWorld.java 是供人阅读的文本，计器运行的代码 HelloWorld.class 是供计器阅读的文本。计算机只能识别二进制，所以.class 文件的内容是我们无法读懂的二进制文本。 接下来运行 HelloWorld.class 文件。 执行命令java HelloWorld，会在控制台窗口输出hello, world!字样。 注意：执行java xx命令时，不可以附带文件名后缀。 使用 Java Test Runner 扩展包运行 鼠标焦点放在 main 方法上面，会看到 Run|Debug 两个按钮，点击 Run 按钮，即可运行 main 方法。这对新手而言是最简单的方式。但实际上仍然会执行第一步的那两个命令。 HelloWorld 程序解析 如果您是一个对编程一无所知的纯新手，这一部分可能不适合您。 public class HelloWorld { // ... } public是 Java 中一个关键字，也称为修饰符。Java 语言规范中明确要求，每个 java 都包含一个 public 修饰的类，类名要与文件名保持一致。 class同样是一个关键字，用于创建一个类。 HelloWorld是类的名字，只要您遵循 Java 命名规则，可以随便取，但是要和文件名保持一致。Java 的命名规则在后面会讲到。 {}两个大括号表示的是一个代码块，HelloWorld 类的内容都在这个大括号内。 "},"tools/":{"url":"tools/","title":"工具篇","keywords":"","body":"写作中 "},"tools/idea/":{"url":"tools/idea/","title":"开发工具：Intellij IDEA","keywords":"","body":"写作中 "},"tools/maven/":{"url":"tools/maven/","title":"包管理工具：Maven","keywords":"","body":"写作中 "},"framework/":{"url":"framework/","title":"框架篇","keywords":"","body":"写作中 "},"framework/spring/":{"url":"framework/spring/","title":"Spring 三部曲：Spring","keywords":"","body":"写作中 "},"framework/spring_boot/":{"url":"framework/spring_boot/","title":"Spring 三部曲：SpringBoot","keywords":"","body":"写作中 "},"framework/spring_cloud/":{"url":"framework/spring_cloud/","title":"Spring 三部曲：SpringCloud","keywords":"","body":"写作中 "},"framework/netty/":{"url":"framework/netty/","title":"网络编程框架：Netty","keywords":"","body":"写作中 "},"storage/":{"url":"storage/","title":"存储篇","keywords":"","body":"写作中 "},"storage/mysql/":{"url":"storage/mysql/","title":"关系型数据库：Mysql","keywords":"","body":"写作中 "},"storage/mongodb/":{"url":"storage/mongodb/","title":"非关系型数据库：Mongodb","keywords":"","body":"写作中 "},"storage/redis/":{"url":"storage/redis/","title":"缓存数据库：Redis","keywords":"","body":"写作中 "},"middleware/":{"url":"middleware/","title":"中间件篇","keywords":"","body":"写作中 "},"middleware/tomcat/":{"url":"middleware/tomcat/","title":"容器中间件：Tomcat","keywords":"","body":"写作中 "},"middleware/kafka/":{"url":"middleware/kafka/","title":"消息中间件：kafka","keywords":"","body":"写作中 "},"virtual_machine/":{"url":"virtual_machine/","title":"虚拟机篇","keywords":"","body":"支撑 java 程序运行的程序叫做 jvm，Java Virtual Machine 的缩写，也称作 java 虚拟机。 我们写的 java 程序，后缀名是.java。而 jvm 只能识别.class 文件。所以 java 程序有一个编译过程。 "},"virtual_machine/jvm/":{"url":"virtual_machine/jvm/","title":"JVM","keywords":"","body":"写作中 "}}